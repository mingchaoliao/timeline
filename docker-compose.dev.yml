version: '3.7'
services:
  nginx:
    image: nginx:1.15.1-alpine
    ports:
      - 80:80
      - 443:443
    depends_on:
      - api
    working_dir: /apidist
    volumes:
      - ./etc/development/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/development/nginx/ssl:/etc/nginx/ssl
      - ./api:/apidist
    networks:
      - internal
  api:
    build:
      context: api
      dockerfile: Dockerfile.dev
      args:
        HOST_USER: "${USER}"
        HOST_UID: "${HOST_UID}"
        HOST_GID: "${HOST_GID}"
    user: "${HOST_UID}:${HOST_GID}"
    volumes:
      - ./api:/apidist
    depends_on:
      - mysql
      - elasticsearch
      - queue
    networks:
      - internal
  api_test:
    build:
      context: api
      dockerfile: Dockerfile.dev
      args:
        HOST_USER: "${USER}"
        HOST_UID: "${HOST_UID}"
        HOST_GID: "${HOST_GID}"
    command: php -v
    volumes:
      - ./api:/apidist
    user: "0:0"
  queue:
    image: redis:5.0.3-alpine
    volumes:
      - queuedata1:/data
    networks:
      - internal
  horizon:
    build:
      context: api
      dockerfile: horizon/Dockerfile.dev
    user: "1000:1000"
    volumes:
      - ./api:/apidist
    depends_on:
      - mysql
      - elasticsearch
      - queue
    networks:
      - internal
  mysql:
    image: mysql:5.7.22
    command: --disable-partition-engine-check
    volumes:
      - dbdata1:/var/lib/mysql
    env_file:
      - ./etc/development/docker/mysql.env
    ports:
      - 13306:3306
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: timeline
      MYSQL_USER: timeline_user
    networks:
      - internal
  elasticsearch:
    build: elasticsearch
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    networks:
      - internal
  elastichq:
    image: elastichq/elasticsearch-hq
    ports:
      - 5000:5000
    environment:
      HQ_DEFAULT_URL: "http://elasticsearch:9200"
    networks:
      - internal
    depends_on:
      - elasticsearch
  web:
    build:
      context: web
      dockerfile: Dockerfile.dev
    user: "1000:1000"
    ports:
      - 4200:4200
    volumes:
      - ./web:/webdist
volumes:
  esdata1:
    driver: local
  dbdata1:
    driver: local
  queuedata1:
    driver: local

networks:
  internal:
